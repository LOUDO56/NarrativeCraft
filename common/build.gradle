plugins {
    id 'multiloader-common'
    id 'net.neoforged.moddev'
}

repositories {
    mavenLocal()
    maven {
        url 'https://maven.kosmx.dev/'
    }
    maven { url = "https://repo.redlance.org/public" }
}

neoForge {
    neoFormVersion = neo_form_version
    // Automatically enable AccessTransformers if the file exists
    def at = file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
}

dependencies {
    compileOnly group: 'org.spongepowered', name: 'mixin', version: '0.8.5'
    // fabric and neoforge both bundle mixinextras, so it is safe to use it in common
    compileOnly group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'
    annotationProcessor group: 'io.github.llamalad7', name: 'mixinextras-common', version: '0.3.5'
    compileOnly("io.github.kosmx.emotes:emotesAPI:${emotesAPI_version}") {
        exclude group: 'com.google.guava', module: 'guava'
    }
    compileOnly("io.github.kosmx.emotes:emotesServer:${emotesAPI_version}") {
        exclude group: 'com.google.guava', module: 'guava'
    }
    implementation "com.bladecoder.ink:blade-ink:1.2.0+nc"
}

configurations {
    commonJava {
        canBeResolved = false
        canBeConsumed = true
    }
    commonResources {
        canBeResolved = false
        canBeConsumed = true
    }
}

artifacts {
    commonJava sourceSets.main.java.sourceDirectories.singleFile
    commonResources sourceSets.main.resources.sourceDirectories.singleFile
}

