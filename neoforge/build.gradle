plugins {
    id 'multiloader-loader'
    id 'net.neoforged.moddev'
    id 'com.hypherionmc.modutils.modpublisher'
}

neoForge {
    version = neoforge_version
    // Automatically enable neoforge AccessTransformers if the file exists
    def at = project(':common').file('src/main/resources/META-INF/accesstransformer.cfg')
    if (at.exists()) {
        accessTransformers.from(at.absolutePath)
    }
    parchment {
        minecraftVersion = parchment_minecraft
        mappingsVersion = parchment_version
    }
    runs {
        configureEach {
            systemProperty('neoforge.enabledGameTestNamespaces', mod_id)
            ideName = "NeoForge ${it.name.capitalize()} (${project.path})" // Unify the run config names with fabric
        }
        client {
            client()
        }
        data {
            clientData()
        }
        server {
            server()
        }
    }
    mods {
        "${mod_id}" {
            sourceSet sourceSets.main
        }
    }
}

repositories {
    mavenLocal()
    maven {
        url 'https://maven.kosmx.dev/'
    }
}

dependencies {
    jarJar(implementation("com.bladecoder.ink:blade-ink")) {
        version {
            prefer '1.2.0+nc'
        }
    }
    additionalRuntimeClasspath 'com.bladecoder.ink:blade-ink:1.2.0+nc'
    compileOnly (group: 'io.github.kosmx.emotes', name: 'emotesAPI', version: '2.6.1') {
        exclude group: 'dev.kosmx.player-anim', module: 'player-animation-lib'
        exclude group: 'dev.kosmx.player-anim', module: 'anim-core'
        exclude group: 'net.raphimc', module: 'NoteBlockLib'
    }
    compileOnly group: 'dev.kosmx.player-anim', name: 'player-animation-lib', version: '2.0.2+1.21.5'
    compileOnly group: 'dev.kosmx.player-anim', name: 'anim-core', version: '2.0.2+1.21.5'
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

publisher {
    apiKeys {
        modrinth System.getenv("MODRINTH_TOKEN")
        curseforge System.getenv("CURSE_TOKEN")
        github System.getenv("GITHUB_TOKEN")
    }

    setCurseID(curse_forge_id)
    setModrinthID(modrinth_id)

    setVersionType(version_type)
    setChangelog(changelog_file)
    setVersion("${project.version}-neoforge-${minecraft_version}")
    setDisplayName("${mod_name} - NeoForge - ${project.version}")
    setGameVersions(minecraft_version)
    setCurseEnvironment(curse_environment)

    setLoaders("neoforge")
    setArtifact("build/libs/${mod_id}-neoforge-${minecraft_version}-${project.version}.jar")

    setJavaVersions(List.of("Java " + java_version))
    setDisableMalwareScanner(true)
    setDisableEmptyJarCheck(true)

}